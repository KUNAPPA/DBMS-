Problem Statement 9 (Map Reduce)
Create collection for Student{roll_no, name, class, dept, aggregate_marks}. Write Map Reduce Functions for
following requirements.

1. Finding the total marks of students of “TE” class department-wise.
2. Finding the highest marks of students of “SE” class department-wise.
3. Find Average marks of students of “BE” class department-wise.



db.createCollection("Student")



db.Student.insertMany([
  { roll_no: 1, name: "Alice", class: "TE", dept: "IT", aggregate_marks: 85 },
  { roll_no: 2, name: "Bob", class: "SE", dept: "CSE", aggregate_marks: 92 },
  { roll_no: 3, name: "Charlie", class: "BE", dept: "ECE", aggregate_marks: 78 },
  // Add more student records as needed
])


var mapFunction1 = function() {
    if (this.class === "TE") {
        emit(this.dept, this.aggregate_marks);
    }
};

var reduceFunction1 = function(dept, marks) {
    return Array.sum(marks);
};

db.Student.mapReduce(
    mapFunction1,
    reduceFunction1,
    { out: "TE_Class_TotalMarks" }
);

// Query the result
db.TE_Class_TotalMarks.find();






2. Finding the highest marks of students of “SE” class department-wise.

var mapFunction2 = function() {
    if (this.class === "SE") {
        emit(this.dept, this.aggregate_marks);
    }
};

var reduceFunction2 = function(dept, marks) {
    return Math.max.apply(null, marks);
};

db.Student.mapReduce(
    mapFunction2,
    reduceFunction2,
    { out: "SE_Class_HighestMarks" }
);

// Query the result
db.SE_Class_HighestMarks.find();


3. Find Average marks of students of “BE” class department-wise.


var mapFunction3 = function() {
    if (this.class === "BE") {
        emit(this.dept, { totalMarks: this.aggregate_marks, count: 1 });
    }
};

var reduceFunction3 = function(dept, marks) {
    var reducedVal = { totalMarks: 0, count: 0 };
    marks.forEach(function(val) {
        reducedVal.totalMarks += val.totalMarks;
        reducedVal.count += val.count;
    });
    return reducedVal;
};

var finalizeFunction3 = function(dept, reducedVal) {
    return reducedVal.totalMarks / reducedVal.count;
};

db.Student.mapReduce(
    mapFunction3,
    reduceFunction3,
    {
        out: "BE_Class_AvgMarks",
        finalize: finalizeFunction3
    }
);

// Query the result
db.BE_Class_AvgMarks.find();


 how to display  Create the Student Collection  command in mongo db


db.createCollection("Student")




