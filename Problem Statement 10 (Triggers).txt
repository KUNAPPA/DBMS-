Problem Statement 10 (Triggers)
Employee( emp_id, dept_idemp_name, DoJ, salary, commission,job_title)
Consider the schema given above for Write a PLSQL Program to
1. Create a Trigger to ensure the salary of the employee is not decreased.
2. Whenever the job title is changed for an employee write the following details into job_history table. Employee
ID, old job title, old department ID, DoJ for start date, system date for end date.

1) command to create table in oracel 

CREATE TABLE Employee (
    emp_id NUMBER PRIMARY KEY,
    dept_id NUMBER,
    emp_name VARCHAR2(255),
    DoJ DATE,
    salary NUMBER(10, 2),
    commission NUMBER(10, 2),
    job_title VARCHAR2(255)
);

2) command to insert data in table 

-- PL/SQL block to insert data into the "Employee" table
BEGIN
    INSERT INTO Employee (emp_id, dept_id, emp_name, DoJ, salary, commission, job_title)
    VALUES (1, 101, 'John Doe', TO_DATE('2023-11-07', 'YYYY-MM-DD'), 5000.00, 500.00, 'Manager');
    
    INSERT INTO Employee (emp_id, dept_id, emp_name, DoJ, salary, commission, job_title)
    VALUES (2, 102, 'Jane Smith', TO_DATE('2023-11-07', 'YYYY-MM-DD'), 4500.00, 300.00, 'Analyst');
    
    -- You can continue inserting more records as needed
    
    COMMIT; -- Commit the transaction
END;
/


3) command to display 
 select * from Employee

4) querry 
1. Create a Trigger to ensure the salary of the employee is not decreased.  

CREATE OR REPLACE TRIGGER CheckSalary
BEFORE UPDATE ON Employee
FOR EACH ROW
BEGIN
    IF :NEW.salary < :OLD.salary THEN
        RAISE_APPLICATION_ERROR(-20001, 'Salary cannot be decreased.');
    END IF;
END;
/


5) command to display trigeer 
-- Show the trigger details
SELECT trigger_name, trigger_type, triggering_event, table_owner, table_name
FROM all_triggers
WHERE table_name = 'Employee' AND trigger_name = 'CheckSalary';


6)querry 

2. Whenever the job title is changed for an employee write the following details into job_history table. Employee
ID, old job title, old department ID, DoJ for start date, system date for end date.


1  creating table command 

CREATE TABLE job_history (
    employee_id NUMBER,
    old_job_title VARCHAR2(255),
    old_department_id NUMBER,
    start_date DATE,
    end_date DATE
);

CREATE OR REPLACE TRIGGER JobTitleChangeTrigger
BEFORE UPDATE OF job_title ON Employee
FOR EACH ROW
BEGIN
    IF :OLD.job_title != :NEW.job_title THEN
        INSERT INTO job_history (employee_id, old_job_title, old_department_id, start_date, end_date)
        VALUES (:OLD.emp_id, :OLD.job_title, :OLD.dept_id, :OLD.DoJ, SYSDATE);
    END IF;
END;
/

2  command to display triger 


SELECT trigger_name, trigger_type, triggering_event, table_owner, table_name
FROM all_triggers
WHERE table_name = 'Employee' AND trigger_name = 'JobTitleChangeTrigger';


